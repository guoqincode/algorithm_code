import string

letter_list = string.ascii_uppercase
letter_list2 = string.ascii_lowercase


def get_real_key(key):
    temp = []
    flag = 0
    for i in key:
        if i.isalpha():
            pass
        else:
            flag = 1
    if flag == 0:
        for i in key:
            temp.append(ord(i.upper()) - 65)
        return temp


def encrt(message, key):
    ciphertext = ""
    flag = 0
    key_list = key
    for plain in message:
        if flag % len(key_list) == 0:
            flag = 0
        if plain.isalpha():  # 判断是否为英文
            if plain.isupper():
                ciphertext += letter_list[(ord(plain) - 65 + key_list[flag]) % 26]  # 行偏移加上列偏移
                flag += 1
            if plain.islower():
                ciphertext += letter_list2[(ord(plain) - 97 + key_list[flag]) % 26]
                flag += 1
        else:  # 不是英文不加密
            ciphertext += plain

    return ciphertext


def dencrt(message, key):
    plaintext = ""
    flag = 0
    key_list = key
    for cipher in message:
        if flag % len(key_list) == 0:
            flag = 0
        if cipher.isalpha():
            if cipher.isupper():
                plaintext += letter_list[(ord(cipher) - 65 - key_list[flag]) % 26]
                flag += 1
            if cipher.islower():
                plaintext += letter_list2[(ord(cipher) - 97 - key_list[flag]) % 26]
                flag += 1
        else:
            plaintext += cipher
    return plaintext


if __name__ == '__main__':
    message = "Common sense is not so common."
    key = "PIZZA"

    real_key = get_real_key(key)

    # print(real_key)
    cipher_text = encrt(message, real_key)

    print("加密前的文本是：", message)
    print("加密后的文本是：", cipher_text)

    decrypted_text = dencrt(cipher_text, real_key)

    print("再次解密后的文本是：", decrypted_text)
